
// Functions
// =========

/// Clearfix extend
/// @example scss - Usage SCSS
///   .foo {
///     @extend %clearfix;
///   }
%clearfix {
  &:after {
    clear: both;
    content: "";
    display: table;
  }
}

/// Convert px to em.
/// @see list-inline
/// @see list-separate
/// @see definition-inline
/// @param {string} $px - Font size
/// @param {string} $base [$base-font-size] - Base font size
/// @example scss - Usage SCSS
///   p {
///     font-size: pem(16px);
///   }
///
///   p {
///     font-size: pem(16px, 48px);
///   }
@function pem(
  $px,
  $base: $base-font-size
  ) {

  @return ($px / $base) * 1em;
}

/// Find color variant in map
/// @param {string} $color-name - Name color
/// @param {string} $color-variant - Variant
/// @example scss - Usage SCSS
/// body {
///   background: coloriz(background);
/// }
/// h1 {
///   color: coloriz(primary, base);
/// }
@function coloriz($color-name, $color-variant:nil) {
  // color variant is optional
  @if ($color-variant != nil) {
    // map inception, need two deep
    @return map-get(map-get($colors, $color-name), $color-variant);
  }
  @else {
    // single-level color, one deep
    @return map-get($colors, $color-name);
  }
}
