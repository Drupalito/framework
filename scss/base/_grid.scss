
// @file: _form.scss
// Grille float bootstrap like.

/*doc
---
title: Grid
category: Layout - Grid
show: false
---

* `.container`
* `.row` représente une rangée
* `col-*` représente une colonne

*/

.container {
  @include container-fixed();

  @media (min-width: $screen-sm-min) {
    width: $container-sm;
  }

  @media (min-width: $screen-md-min) {
    width: $container-md;
  }

  @media (min-width: $screen-lg-min) {
    width: $container-lg;
  }
}

/*
Fluid container

Utilizes the mixin meant for fixed width containers, but without any defined
width for fluid, full width layouts.
*/

.container-fluid {
  @include container-fixed();
}

/*
Row

Rows contain and clear the floats of your columns.
*/

.row {
  @include make-row();
}

.row-xs-height {
  display: flex;
  align-items: center;
  justify-content: center;
}

.row-xs-noborder {
  margin-left: 0;
  margin-right: 0;

  > div {
    padding-left: 0;
    padding-right: 0;
  }
}

.row-xs-eqheight {
  display: flex;
  flex-wrap: wrap;

  > div {
    display: flex;
  }

  > div > div {
    width: 100%;
  }
}

.col-top {
  align-self: flex-start;
}

.col-bottom {
  align-self: flex-end;
}

/*
Columns

Common styles for small and large grid columns
*/

@include make-grid-columns();

/*
Extra small grid

Columns, offsets, pushes, and pulls for extra small devices like
smartphones.
*/

@include make-grid(xs);

/*
Small grid

Columns, offsets, pushes, and pulls for the small device range, from phones
to tablets.
*/

@media (min-width: $screen-sm-min) {
  @include make-grid(sm);

  .row-sm-height {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .row-sm-noborder {
    margin-left: 0;
    margin-right: 0;

    > div {
      padding-left: 0;
      padding-right: 0;
    }
  }

  .row-sm-eqheight {
    display: flex;
    flex-wrap: wrap;

    > div {
      display: flex;
    }

    > div > div {
      width: 100%;
    }
  }
}

/*
Medium grid

Columns, offsets, pushes, and pulls for the desktop device range.
*/

@media (min-width: $screen-md-min) {
  @include make-grid(md);

  .row-md-height {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .row-md-noborder {
    margin-left: 0;
    margin-right: 0;

    > div {
      padding-left: 0;
      padding-right: 0;
    }
  }

  .row-md-eqheight {
    display: flex;
    flex-wrap: wrap;

    > div {
      display: flex;
    }

    > div > div {
      width: 100%;
    }
  }
}

/*
Large grid

Columns, offsets, pushes, and pulls for the large desktop device range.
*/

@media (min-width: $screen-lg-min) {
  @include make-grid(lg);

  .row-lg-height {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .row-lg-noborder {
    margin-left: 0;
    margin-right: 0;

    > div {
      padding-left: 0;
      padding-right: 0;
    }
  }

  .row-lg-eqheight {
    display: flex;
    flex-wrap: wrap;

    > div {
      display: flex;
    }

    > div > div {
      width: 100%;
    }
  }
}
